{
  "info": {
    "name": "LLM Backend Auth",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health",
      "request": {
        "method": "GET",
        "header": [],
        "url": { "raw": "{{baseUrl}}/health", "host": ["{{baseUrl}}"], "path": ["health"] }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('status ok', function () {",
              "  pm.response.to.have.status(200);",
              "  const json = pm.response.json();",
              "  pm.expect(json.status).to.eql('ok');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Auth - Request Magic",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": { "mode": "raw", "raw": "{\n  \"email\": \"{{email}}\",\n  \"employeeId\": \"{{employeeId}}\"\n}" },
        "url": { "raw": "{{baseUrl}}/auth/request-magic", "host": ["{{baseUrl}}"], "path": ["auth", "request-magic"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('created', () => pm.response.to.have.status(201));",
              "const json = pm.response.json();",
              "pm.test('has link', () => pm.expect(json.link).to.be.a('string'));",
              "const m = json.link && json.link.match(/[?&]token=([^&]+)/);",
              "if (m) pm.environment.set('magicToken', m[1]);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Auth - Verify Magic (GET)",
      "request": {
        "method": "GET",
        "header": [],
        "url": { "raw": "{{baseUrl}}/auth/verify-magic?token={{magicToken}}", "host": ["{{baseUrl}}"], "path": ["auth", "verify-magic"], "query": [{"key": "token", "value": "{{magicToken}}"}] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('ok', () => pm.response.to.have.status(200));",
              "const json = pm.response.json();",
              "pm.environment.set('accessToken', json.accessToken);",
              "pm.environment.set('refreshToken', json.refreshToken);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Auth - Refresh",
      "request": {
        "method": "POST",
        "header": [{ "key": "Content-Type", "value": "application/json" }],
        "body": { "mode": "raw", "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}" },
        "url": { "raw": "{{baseUrl}}/auth/refresh", "host": ["{{baseUrl}}"], "path": ["auth", "refresh"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('ok', () => pm.response.to.have.status(201));",
              "const json = pm.response.json();",
              "pm.environment.set('accessToken', json.accessToken);",
              "pm.environment.set('refreshToken', json.refreshToken);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Auth - Logout",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "Authorization", "value": "Bearer {{accessToken}}" }
        ],
        "url": { "raw": "{{baseUrl}}/auth/logout", "host": ["{{baseUrl}}"], "path": ["auth", "logout"] }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('ok', () => pm.response.to.have.status(201));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}
